import { Event } from './Event';

/**
 * Конфигурация сервиса.
 */
export type Config = {
  /**
   * Адрес, по которому расположено API ClickHouse. Если сервис ещё не был
   * инициализирован, является пустой строкой.
   */
  url: string;

  /**
   * Уникальный идентификатор API. Если сервис ещё не был инициализирован,
   * является пустой строкой.
   */
  id: string;

  /**
   * Хук, выполняющийся перед отправкой любого события. Позволяет редактировать
   * параметры события перед пересылкой.
   *
   * @param event Отправляемое событие.
   */
  beforeSend?: (event: Event) => void;

  /**
   * Указывает, что информацию, отправляемую на сервер, нужно логгировать в
   * браузерную консоль.
   *
   * Информация записывается в режиме verbose и c префиксом `clickhouse_event`.
   */
  verbose?: boolean;
};

/**
 * Глобальный объект конфигурации сервиса. Если он равен `undefined`, то
 * сервис ещё не был инициализирован.
 */
let config: Config = {
  url: '',
  id: '',
};

/**
 * Возвращает конфигурацию сервиса.
 */
export const getConfig = () => config;

/**
 * Задаёт новые значения конфигурации сервиса и возвращает новый объект.
 * @param values Коллекция новых значений.
 */
export const setConfig = (values: Partial<Config>) => {
  config = {
    ...config,
    ...values,
  };

  return config;
};
